# Copyright (c) 2024 Wen-Di Li <liwendi23@mails.ucas.ac.cn> and Quan-feng WU <wuquanfeng@ihep.ac.cn>
# 
# This software is released under the MIT License.
# https://opensource.org/licenses/MIT

name: Run tests

on:
  push:
    branches:
      - main
  pull_request:

# needed to allow julia-actions/cache to delete old caches that it has created
permissions:
  actions: write
  contents: read

jobs:
  generate_nu_list:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      # Comment out the following lines for the next update of julia-actions/julia-runtest
      # - uses: julia-actions/julia-runtest@v1
      #   with: 
      #     test_args: |
      #       --test-type=random-ν-list
      #       --
      #       -n=100
      #       --max-ν=5
      #       -o=${{ github.WORKSPACE }}/random_ν_list.jld2
      - name: Generate ν list
        run: julia --project -e "using Pkg; Pkg.test(test_args=[\"--test-type=random-ν-list\", \"--\", \"-n=100\", \"--max-ν=5\", \"-o=${{ github.WORKSPACE }}/random_ν_list.jld2\"])"

      - uses: actions/upload-artifact@v4
        with:
          name: random_ν_list
          path: ${{ github.WORKSPACE }}/random_ν_list.jld2

  julia_general_case:
    runs-on: ubuntu-latest
    needs: generate_nu_list
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: random_ν_list
          path: ${{ github.WORKSPACE }}
      - uses: julia-actions/setup-julia@v2
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      # Comment out the following lines for the next update of julia-actions/julia-runtest
      # - uses: julia-actions/julia-runtest@v1
      #   with: 
      #     test_args: |
      #       --test-type=julia-general-case
      #       --
      #       --ν-lists=${{ github.WORKSPACE }}/random_ν_list.jld2
      #       -o=${{ github.WORKSPACE }}/julia_general_case_result.jld2
      - name: Run for general case
        run: julia --project -e "using Pkg; Pkg.test(test_args=[\"--test-type=julia-general-case\", \"--\", \"--ν-lists=${{ github.WORKSPACE }}/random_ν_list.jld2\", \"-o=${{ github.WORKSPACE }}/julia_general_case_result.jld2\"])"
      - uses: actions/upload-artifact@v4
        with:
          name: julia_general_case_result
          path: ${{ github.WORKSPACE }}/julia_general_case_result.jld2

  MMA_general_case_script:
    runs-on: ubuntu-latest
    needs: generate_nu_list
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: random_ν_list
          path: ${{ github.WORKSPACE }}
      - uses: julia-actions/setup-julia@v2
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      # Comment out the following lines for the next update of julia-actions/julia-runtest
      # - uses: julia-actions/julia-runtest@v1
      #   with: 
      #     test_args: |
      #       --test-type=MMA-general-case-script
      #       --
      #       --ν-lists=${{ github.WORKSPACE }}/random_ν_list.jld2
      #       -o=${{ github.WORKSPACE }}
      - name: Run for general case
        run: julia --project -e "using Pkg; Pkg.test(test_args=[\"--test-type=MMA-general-case-script\", \"--\", \"--ν-lists=${{ github.WORKSPACE }}/random_ν_list.jld2\", \"-o=${{ github.WORKSPACE }}\"])"
      - name: Make script artifact
        run: tar -czvf MMA_general_case_script.tar.gz run_MMA_general_case_script.sh *.wls
      - uses: actions/upload-artifact@v4
        with:
          name: MMA_general_case_script
          path: ${{ github.WORKSPACE }}/MMA_general_case_script.tar.gz

  prepare_AmpRed:
    runs-on: ubuntu-latest
    steps:
      - name: Generate MMA Script and Download AmpRed
        run: |
          wget https://gitlab.com/chenwenphy/ampred/-/archive/main/ampred-main.tar.gz

      - name: Upload AmpRed Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AmpRed
          path: ampred-main.tar.gz
  
  run_MMA_script:
    runs-on: ubuntu-latest
    needs: [MMA_general_case_script, prepare_AmpRed]
    container:
      image: fenyutanchan/fytcmma:14.1.0
      credentials:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: AmpRed
      - uses: actions/download-artifact@v4
        with:
          name: MMA_general_case_script
      - name: Run Script
        run: |
          tar -zxvf ampred-main.tar.gz
          tar -zxvf MMA_general_case_script.tar.gz
          /bin/bash /root/magic.sh > /dev/null
          /bin/bash run_MMA_general_case_script.sh
          tar -czvf MMA_general_case_result.tar.gz *.txt
      
      - name: Upload Result
        uses: actions/upload-artifact@v4
        with:
          name: MMA_general_case_result
          path: MMA_general_case_result.tar.gz
        